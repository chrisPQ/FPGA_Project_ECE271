module shiftInterpret #(parameter N = 8) (input logic[N-1:0] data, input logic clk, input logic reset, output logic[2:0] q, output logic NS);

	logic[19:0] count = 0;
	
	always_comb 
		begin
			case(data)
				// first bit is direction, second is increase or decrease, last bit is flag for not moving
				0: q=2'b000;
				1: q=2'b001;
				2: q=2'b010;
				3: q=2'b011;
				4: q=2'b100;
				5: q=2'b101;
				6: q=2'b110;
				7: q=2'b111;
				default: q=2'b000;
			endcase
		end
	
	always_ff @(posedge clk) begin
			if(count < 250000)
				begin
					NS <= 0;
					count <= count + 1;
				end
			else 
				NS <= 1;
				count <= 0;
		end
	
	
endmodule 