module codeDecoder #(parameter N = 2) (input logic[N-1:0] data, input logic reset, input logic clk, output logic[9:0] horizontalStart, output logic[9:0] verticalStart);
	always_ff @(posedge clk)
	begin
		if(reset) begin
			horizontalStart = 0;
			verticalStart = 0;
		end
		case(data)
				// first bit is direction, second is increase or decrease, last bit is flag for not moving
				0: horizontalStart = horizontalStart; //hor, decrease, no move
				1: horizontalStart = horizontalStart - 1; //hor decrease, move
				2: horizontalStart = horizontalStart; //hor increase no move
				3: horizontalStart = horizontalStart + 1; //hor increase move
				4: verticalStart = verticalStart; //ver decrease no move
				5: verticalStart = verticalStart - 1; //ver decrease move
				6: verticalStart = verticalStart; //ver increase no move
				7: verticalStart = verticalStart + 1; //ver increase move
				default: begin verticalStart = verticalStart; horizontalStart = horizontalStart; end
	  endcase
	end
endmodule 